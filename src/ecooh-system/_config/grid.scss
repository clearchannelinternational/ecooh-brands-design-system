// FLEXBOX CSS GRID
// by Laptev Pavel
// Small devices (landscape phones, 576px and up)

// VARiABLES
// desktop grid
$grid-desktop-columns: 24;
$grid-desktop-sideMargin: 0px;
$grid-desktop-gutter: 16px;
$grid-desktop-breakpoint: 1280px;

// tablet grid
$grid-tablet-columns: 12;
$grid-tablet-sideMargin: 0px;
$grid-tablet-gutter: 16px;
$grid-tablet-breakpoint: 768px;

// mobile grid
$grid-mobile-columns: 4;
$grid-mobile-sideMargin: 0px;
$grid-mobile-gutter: 0;
$grid-mobile-breakpoint: 580px;


// pixels to % variables
$desk-grid-width: 100% - (($grid-desktop-sideMargin * 2 / $grid-desktop-breakpoint) * 100%);
$tab-grid-width: 100% - (($grid-tablet-sideMargin * 2 / $grid-tablet-breakpoint) * 100%);
$mob-grid-width: 100% - (($grid-mobile-sideMargin * 2 / $grid-mobile-breakpoint) * 100%);

$desk-gutter: $grid-desktop-gutter;
$tab-gutter: $grid-tablet-gutter;
$mob-gutter: $grid-mobile-gutter;

// FUNCTIONS AND MiXINS
@function col-width($i, $columns) {
  @return 100% / $columns * $i;
}

@mixin col-props($i, $columns, $gutter) {
  box-sizing: border-box;
  width: col-width($i, $columns);
  padding-left: $gutter/2;
  padding-right: $gutter/2;
}

@mixin columns-loop($name, $columns, $gutter) {
  @for $i from 0 through $columns {
    &-#{$name}-#{$i} {
      @include col-props($i, $columns, $gutter);
    }

    &-#{$name}-shift-#{$i} {
      margin-left: col-width($i, $columns);
    }
  }
}

@mixin grid-base($width) {
  box-sizing: border-box;
  display: flex;
  margin-left: auto;
  margin-right: auto;
  flex-wrap: wrap;
  width: $width;
}

// CLASSES
.grid {
  @include grid-base($mob-grid-width);

  @media screen and (min-width: $grid-tablet-breakpoint) {
    width: $tab-grid-width;
  }

  @media screen and (min-width: $grid-desktop-breakpoint) {
    width: $desk-grid-width;
  }

  &-0 {
    display: none;
  }
}

.col {
  @include columns-loop(mob, $grid-mobile-columns, $mob-gutter);

  @media screen and (min-width: $grid-tablet-breakpoint) {
    @include columns-loop(tab, $grid-tablet-columns, $tab-gutter);
  }

  @media screen and (min-width: $grid-desktop-breakpoint) {
    @include columns-loop(desk, $grid-desktop-columns, $desk-gutter);
  }
}

.grid {
  .col-desk-12 {
    @include respond-to("extra-large-up") {
      &:nth-child(odd) {
        // background: #FF00CC;
        padding-left: 0;
      }

      &:nth-child(even) {
        // background: blue;
        padding-right: 0;
      }
    }
  }

  .col-desk-8 {
    @include respond-to("extra-large-up") {
      &:first-child {
        padding-left: 0;
      }

      &:last-child {
        padding-right: 0;
      }
    }
  }

  .col-tab-6 {
    @include respond-to("large-up") {
      &:first-child {
        padding-left: 0;
      }

      &:last-child {
        padding-right: 0;
      }
    }
  }

}